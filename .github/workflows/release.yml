name: 'publish'

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest, macos-13]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          sleep 30

      - name: install protobuf (ubuntu)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          PROTOC_VERSION="24.3"
          wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
          unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d $HOME/.local
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "PROTOC=$HOME/.local/bin/protoc" >> $GITHUB_ENV

      - name: install protobuf (macos)
        if: matrix.platform == 'macos-latest' || matrix.platform == 'macos-13'
        run: |
          brew install protobuf
          echo "PROTOC=$(which protoc)" >> $GITHUB_ENV

      - name: install protobuf (windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install protoc
          echo "PROTOC=C:\ProgramData\chocolatey\bin\protoc.exe" >> $env:GITHUB_ENV

      - name: install frontend dependencies
        run: bun install # change this to npm or pnpm depending on which one you use

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NODE_OPTIONS: '--max_old_space_size=4096'
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
